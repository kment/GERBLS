Getting started
===============

This documentation assumes basic familiarity with the Box Least Squares (BLS) algorithm. The BLS
method was originally described by Kovács et al. [1]_, and a brief summary can be found in the
`AstroPy user guide`_. GERBLS relies on a fast-folding implementation of BLS, which comes with a
couple of specific quirks compared to the original BLS algorithm [1]_. These are
described below.

.. _AstroPy user guide: https://docs.astropy.org/en/stable/timeseries/bls.html

.. _things-to-know-label:

Things to know about GERBLS
---------------------------

The BLS test statistic
^^^^^^^^^^^^^^^^^^^^^^
The BLS periodograms generated by GERBLS use a reformulated goodness-of-fit statistic. Instead of
the "Signal Residue" (SR) or "Signal Detection Efficiency" used by Kovács et al. [1]_, GERBLS
calculates the |dchi2| statistic defined by eq. A6 of Burke et al. [2]_. Specifically, |dchi2| **is
the improvement in** :math:`\chi^2` **between a best-fit boxcar model (with a transit) and a
constant-flux model (no transit)**. As shown by [2]_, |dchi2| is related to the Signal Residue via
:math:`\Delta\chi^2 / \sum_k \sigma_k^2 = (\textrm{SR})^2`. If one assumes constant Gaussian noise,
i.e. :math:`\sigma_k = const.` then the effective signal-to-noise ratio (SNR) of the light curve
is equal to :math:`\textrm{SNR} = \sqrt{\Delta\chi^2}`. Therefore, :math:`\sqrt{\Delta\chi^2}` can
often serve as a reasonable first-order approximation of the transit SNR, although the true SNR will
be lower in the presence of correlated noise that has not been successfully detrended.

.. |dchi2| replace:: :math:`\Delta\chi^2`

.. _period-grid-label:

The period grid
^^^^^^^^^^^^^^^
Unlike a brute-force implementation of BLS, the fast-folding [3]_ [4]_ approach of GERBLS does not
provide an easy way to directly manipulate the period array of the BLS periodogram. This is due to
the period sampling not being *exactly* evenly spaced in orbital frequency or period (although
locally, the period grid is approximately evenly sampled in orbital frequency). However, the minimum
and maximum search periods can still be directly defined, and **the number of periods searched can
be affected via the time sampling rate of the input data**. GERBLS provides an easy way to specify
the desired time sampling when setting up the BLS (longer-cadence data = fewer periods searched).
Furthermore, longer orbital periods are relatively more computationally expensive to search; GERBLS
can automatically downsample the data at longer periods to further speed up the BLS while not
sacrificing higher period resolution at shorter orbital periods where errors in the calculated
period accumulate more over the entire time span of the light curve.

Two ways to run GERBLS
----------------------

Basic usage
^^^^^^^^^^^
Basic usage consists of a single function that generates a BLS periodogram. It is set up to be a
convenient alternative to :external:meth:`astropy.timeseries.BoxLeastSquares.autopower` with similar
function parameters. However, it only produces a simple periodogram (a set of output arrays), and it
omits much of the advanced functionality options implemented in GERBLS. It is designed to be a
quick-start option. For specific instructions, see :doc:`basic_usage`.

Full usage
^^^^^^^^^^
See :doc:`examples/fastbls`.

Literature references
---------------------
.. [1] Kovács, G., Zucker, S., & Mazeh, T. 2002, A&A, 391, 369
    (`ADS <https://ui.adsabs.harvard.edu/abs/2002A%26A...391..369K/abstract>`__)
.. [2] Burke, C. J., Gaudi, B. S., DePoy, D. L., et al. 2006, AJ, 132, 1, 210
    (`ADS <https://ui.adsabs.harvard.edu/abs/2006AJ....132..210B/abstract>`__)
.. [3] Staelin, D. H. 1969, IEEE Proceedings, 57, 724
    (`ADS <https://ui.adsabs.harvard.edu/abs/1969IEEEP..57..724S/abstract>`__)
.. [4] Morello, V., Barr, E. D., Stappers, B. W., et al. 2020, MNRAS, 497, 4, 4654
    (`ADS <https://ui.adsabs.harvard.edu/abs/2020MNRAS.497.4654M/abstract>`__)